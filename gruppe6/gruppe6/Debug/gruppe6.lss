
gruppe6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f8  00800100  00000bbc  00000c50  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bbc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  008001f8  008001f8  00000d48  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d48  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000218  00000000  00000000  00000d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001efd  00000000  00000000  00000f90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c30  00000000  00000000  00002e8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a70  00000000  00000000  00003abd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004dc  00000000  00000000  00004530  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000656  00000000  00000000  00004a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e29  00000000  00000000  00005062  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001d0  00000000  00000000  00005e8b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__ctors_end>
   4:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
   8:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
   c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  10:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  14:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  18:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  1c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  20:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  24:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  28:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  2c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  30:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  34:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  38:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  3c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  40:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  44:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  48:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  4c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  50:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  54:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  58:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  5c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  60:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  64:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  68:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  6c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>

00000070 <__trampolines_end>:
  70:	00 00       	nop
  72:	00 00       	nop
  74:	00 5c       	subi	r16, 0xC0	; 192
  76:	00 00       	nop
  78:	0c 00       	.word	0x000c	; ????
  7a:	0c 00       	.word	0x000c	; ????
  7c:	7c 28       	or	r7, r12
  7e:	7c 28       	or	r7, r12
  80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
  82:	68 00       	.word	0x0068	; ????
  84:	24 10       	cpse	r2, r4
  86:	48 00       	.word	0x0048	; ????
  88:	28 54       	subi	r18, 0x48	; 72
  8a:	28 40       	sbci	r18, 0x08	; 8
  8c:	00 0c       	add	r0, r0
  8e:	00 00       	nop
  90:	00 78       	andi	r16, 0x80	; 128
  92:	84 00       	.word	0x0084	; ????
  94:	84 78       	andi	r24, 0x84	; 132
  96:	00 00       	nop
  98:	54 38       	cpi	r21, 0x84	; 132
  9a:	54 00       	.word	0x0054	; ????
  9c:	10 7c       	andi	r17, 0xC0	; 192
  9e:	10 00       	.word	0x0010	; ????
  a0:	80 40       	sbci	r24, 0x00	; 0
  a2:	00 00       	nop
  a4:	10 10       	cpse	r1, r0
  a6:	10 00       	.word	0x0010	; ????
  a8:	00 40       	sbci	r16, 0x00	; 0
  aa:	00 00       	nop
  ac:	60 10       	cpse	r6, r0
  ae:	0c 00       	.word	0x000c	; ????
  b0:	38 54       	subi	r19, 0x48	; 72
  b2:	38 00       	.word	0x0038	; ????
  b4:	48 7c       	andi	r20, 0xC8	; 200
  b6:	40 00       	.word	0x0040	; ????
  b8:	48 64       	ori	r20, 0x48	; 72
  ba:	58 00       	.word	0x0058	; ????
  bc:	44 54       	subi	r20, 0x44	; 68
  be:	2c 00       	.word	0x002c	; ????
  c0:	1c 10       	cpse	r1, r12
  c2:	7c 00       	.word	0x007c	; ????
  c4:	5c 54       	subi	r21, 0x4C	; 76
  c6:	24 00       	.word	0x0024	; ????
  c8:	38 54       	subi	r19, 0x48	; 72
  ca:	24 00       	.word	0x0024	; ????
  cc:	64 14       	cp	r6, r4
  ce:	0c 00       	.word	0x000c	; ????
  d0:	68 54       	subi	r22, 0x48	; 72
  d2:	2c 00       	.word	0x002c	; ????
  d4:	48 54       	subi	r20, 0x48	; 72
  d6:	38 00       	.word	0x0038	; ????
  d8:	00 48       	sbci	r16, 0x80	; 128
  da:	00 00       	nop
  dc:	80 48       	sbci	r24, 0x80	; 128
  de:	00 00       	nop
  e0:	10 28       	or	r1, r0
  e2:	44 00       	.word	0x0044	; ????
  e4:	28 28       	or	r2, r8
  e6:	28 00       	.word	0x0028	; ????
  e8:	44 28       	or	r4, r4
  ea:	10 00       	.word	0x0010	; ????
  ec:	04 54       	subi	r16, 0x44	; 68
  ee:	08 00       	.word	0x0008	; ????
  f0:	38 44       	sbci	r19, 0x48	; 72
  f2:	5c 00       	.word	0x005c	; ????
  f4:	78 14       	cp	r7, r8
  f6:	78 00       	.word	0x0078	; ????
  f8:	7c 54       	subi	r23, 0x4C	; 76
  fa:	28 00       	.word	0x0028	; ????
  fc:	38 44       	sbci	r19, 0x48	; 72
  fe:	28 00       	.word	0x0028	; ????
 100:	7c 44       	sbci	r23, 0x4C	; 76
 102:	38 00       	.word	0x0038	; ????
 104:	7c 54       	subi	r23, 0x4C	; 76
 106:	44 00       	.word	0x0044	; ????
 108:	7c 14       	cp	r7, r12
 10a:	04 00       	.word	0x0004	; ????
 10c:	38 44       	sbci	r19, 0x48	; 72
 10e:	74 00       	.word	0x0074	; ????
 110:	7c 10       	cpse	r7, r12
 112:	7c 00       	.word	0x007c	; ????
 114:	44 7c       	andi	r20, 0xC4	; 196
 116:	44 00       	.word	0x0044	; ????
 118:	20 40       	sbci	r18, 0x00	; 0
 11a:	3c 00       	.word	0x003c	; ????
 11c:	7c 10       	cpse	r7, r12
 11e:	6c 00       	.word	0x006c	; ????
 120:	7c 40       	sbci	r23, 0x0C	; 12
 122:	40 00       	.word	0x0040	; ????
 124:	7c 18       	sub	r7, r12
 126:	7c 00       	.word	0x007c	; ????
 128:	78 10       	cpse	r7, r8
 12a:	3c 00       	.word	0x003c	; ????
 12c:	38 44       	sbci	r19, 0x48	; 72
 12e:	38 00       	.word	0x0038	; ????
 130:	7c 14       	cp	r7, r12
 132:	08 00       	.word	0x0008	; ????
 134:	38 44       	sbci	r19, 0x48	; 72
 136:	b8 00       	.word	0x00b8	; ????
 138:	7c 14       	cp	r7, r12
 13a:	68 00       	.word	0x0068	; ????
 13c:	48 54       	subi	r20, 0x48	; 72
 13e:	24 00       	.word	0x0024	; ????
 140:	04 7c       	andi	r16, 0xC4	; 196
 142:	04 00       	.word	0x0004	; ????
 144:	7c 40       	sbci	r23, 0x0C	; 12
 146:	7c 00       	.word	0x007c	; ????
 148:	3c 60       	ori	r19, 0x0C	; 12
 14a:	3c 00       	.word	0x003c	; ????
 14c:	7c 30       	cpi	r23, 0x0C	; 12
 14e:	7c 00       	.word	0x007c	; ????
 150:	6c 10       	cpse	r6, r12
 152:	6c 00       	.word	0x006c	; ????
 154:	0c 70       	andi	r16, 0x0C	; 12
 156:	0c 00       	.word	0x000c	; ????
 158:	64 54       	subi	r22, 0x44	; 68
 15a:	4c 00       	.word	0x004c	; ????
 15c:	00 7c       	andi	r16, 0xC0	; 192
 15e:	44 00       	.word	0x0044	; ????
 160:	0c 10       	cpse	r0, r12
 162:	60 00       	.word	0x0060	; ????
 164:	44 7c       	andi	r20, 0xC4	; 196
 166:	00 00       	nop
 168:	08 04       	cpc	r0, r8
 16a:	08 00       	.word	0x0008	; ????
 16c:	80 80       	ld	r8, Z
 16e:	80 00       	.word	0x0080	; ????
 170:	00 04       	cpc	r0, r0
 172:	08 00       	.word	0x0008	; ????
 174:	30 48       	sbci	r19, 0x80	; 128
 176:	78 00       	.word	0x0078	; ????
 178:	7c 48       	sbci	r23, 0x8C	; 140
 17a:	30 00       	.word	0x0030	; ????
 17c:	30 48       	sbci	r19, 0x80	; 128
 17e:	48 00       	.word	0x0048	; ????
 180:	30 48       	sbci	r19, 0x80	; 128
 182:	7c 00       	.word	0x007c	; ????
 184:	30 68       	ori	r19, 0x80	; 128
 186:	50 00       	.word	0x0050	; ????
 188:	10 78       	andi	r17, 0x80	; 128
 18a:	14 00       	.word	0x0014	; ????
 18c:	90 a8       	ldd	r9, Z+48	; 0x30
 18e:	78 00       	.word	0x0078	; ????
 190:	7c 08       	sbc	r7, r12
 192:	70 00       	.word	0x0070	; ????
 194:	50 74       	andi	r21, 0x40	; 64
 196:	40 00       	.word	0x0040	; ????
 198:	80 80       	ld	r8, Z
 19a:	74 00       	.word	0x0074	; ????
 19c:	7c 10       	cpse	r7, r12
 19e:	68 00       	.word	0x0068	; ????
 1a0:	44 7c       	andi	r20, 0xC4	; 196
 1a2:	40 00       	.word	0x0040	; ????
 1a4:	78 10       	cpse	r7, r8
 1a6:	78 00       	.word	0x0078	; ????
 1a8:	78 08       	sbc	r7, r8
 1aa:	70 00       	.word	0x0070	; ????
 1ac:	30 48       	sbci	r19, 0x80	; 128
 1ae:	30 00       	.word	0x0030	; ????
 1b0:	f8 28       	or	r15, r8
 1b2:	10 00       	.word	0x0010	; ????
 1b4:	30 48       	sbci	r19, 0x80	; 128
 1b6:	f8 00       	.word	0x00f8	; ????
 1b8:	78 10       	cpse	r7, r8
 1ba:	08 00       	.word	0x0008	; ????
 1bc:	50 58       	subi	r21, 0x80	; 128
 1be:	28 00       	.word	0x0028	; ????
 1c0:	08 3c       	cpi	r16, 0xC8	; 200
 1c2:	48 00       	.word	0x0048	; ????
 1c4:	38 40       	sbci	r19, 0x08	; 8
 1c6:	78 00       	.word	0x0078	; ????
 1c8:	38 40       	sbci	r19, 0x08	; 8
 1ca:	38 00       	.word	0x0038	; ????
 1cc:	78 20       	and	r7, r8
 1ce:	78 00       	.word	0x0078	; ????
 1d0:	48 30       	cpi	r20, 0x08	; 8
 1d2:	48 00       	.word	0x0048	; ????
 1d4:	98 a0       	ldd	r9, Y+32	; 0x20
 1d6:	78 00       	.word	0x0078	; ????
 1d8:	48 68       	ori	r20, 0x88	; 136
 1da:	58 00       	.word	0x0058	; ????
 1dc:	10 78       	andi	r17, 0x80	; 128
 1de:	84 00       	.word	0x0084	; ????
 1e0:	00 7c       	andi	r16, 0xC0	; 192
 1e2:	00 00       	nop
 1e4:	84 78       	andi	r24, 0x84	; 132
 1e6:	10 00       	.word	0x0010	; ????
 1e8:	08 04       	cpc	r0, r8
 1ea:	08 04       	cpc	r0, r8

000001ec <__ctors_end>:
 1ec:	11 24       	eor	r1, r1
 1ee:	1f be       	out	0x3f, r1	; 63
 1f0:	cf ef       	ldi	r28, 0xFF	; 255
 1f2:	d4 e0       	ldi	r29, 0x04	; 4
 1f4:	de bf       	out	0x3e, r29	; 62
 1f6:	cd bf       	out	0x3d, r28	; 61

000001f8 <__do_copy_data>:
 1f8:	11 e0       	ldi	r17, 0x01	; 1
 1fa:	a0 e0       	ldi	r26, 0x00	; 0
 1fc:	b1 e0       	ldi	r27, 0x01	; 1
 1fe:	ec eb       	ldi	r30, 0xBC	; 188
 200:	fb e0       	ldi	r31, 0x0B	; 11
 202:	02 c0       	rjmp	.+4      	; 0x208 <__do_copy_data+0x10>
 204:	05 90       	lpm	r0, Z+
 206:	0d 92       	st	X+, r0
 208:	a8 3f       	cpi	r26, 0xF8	; 248
 20a:	b1 07       	cpc	r27, r17
 20c:	d9 f7       	brne	.-10     	; 0x204 <__do_copy_data+0xc>

0000020e <__do_clear_bss>:
 20e:	22 e0       	ldi	r18, 0x02	; 2
 210:	a8 ef       	ldi	r26, 0xF8	; 248
 212:	b1 e0       	ldi	r27, 0x01	; 1
 214:	01 c0       	rjmp	.+2      	; 0x218 <.do_clear_bss_start>

00000216 <.do_clear_bss_loop>:
 216:	1d 92       	st	X+, r1

00000218 <.do_clear_bss_start>:
 218:	a6 30       	cpi	r26, 0x06	; 6
 21a:	b2 07       	cpc	r27, r18
 21c:	e1 f7       	brne	.-8      	; 0x216 <.do_clear_bss_loop>
 21e:	0e 94 93 03 	call	0x726	; 0x726 <main>
 222:	0c 94 dc 05 	jmp	0xbb8	; 0xbb8 <_exit>

00000226 <__bad_interrupt>:
 226:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000022a <ADC_init>:
 22a:	85 b7       	in	r24, 0x35	; 53
 22c:	80 68       	ori	r24, 0x80	; 128
 22e:	85 bf       	out	0x35, r24	; 53
 230:	80 b7       	in	r24, 0x30	; 48
 232:	80 62       	ori	r24, 0x20	; 32
 234:	80 bf       	out	0x30, r24	; 48
 236:	bb 98       	cbi	0x17, 3	; 23
 238:	08 95       	ret

0000023a <ADC_read>:
 23a:	8c 5f       	subi	r24, 0xFC	; 252
 23c:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 240:	80 e1       	ldi	r24, 0x10	; 16
 242:	8a 95       	dec	r24
 244:	f1 f7       	brne	.-4      	; 0x242 <ADC_read+0x8>
 246:	00 c0       	rjmp	.+0      	; 0x248 <ADC_read+0xe>
 248:	b3 99       	sbic	0x16, 3	; 22
 24a:	fe cf       	rjmp	.-4      	; 0x248 <ADC_read+0xe>
 24c:	80 91 00 14 	lds	r24, 0x1400
 250:	08 95       	ret

00000252 <can_init>:
 252:	cf 93       	push	r28
 254:	c8 2f       	mov	r28, r24
 256:	0e 94 86 03 	call	0x70c	; 0x70c <SPI_init>
 25a:	0e 94 5f 01 	call	0x2be	; 0x2be <MCP2515_reset>
 25e:	4c 2f       	mov	r20, r28
 260:	60 ee       	ldi	r22, 0xE0	; 224
 262:	8f e0       	ldi	r24, 0x0F	; 15
 264:	0e 94 45 01 	call	0x28a	; 0x28a <MCP2515_bit_modify>
 268:	40 e6       	ldi	r20, 0x60	; 96
 26a:	60 e6       	ldi	r22, 0x60	; 96
 26c:	80 e6       	ldi	r24, 0x60	; 96
 26e:	0e 94 45 01 	call	0x28a	; 0x28a <MCP2515_bit_modify>
 272:	40 e0       	ldi	r20, 0x00	; 0
 274:	64 e0       	ldi	r22, 0x04	; 4
 276:	80 e6       	ldi	r24, 0x60	; 96
 278:	0e 94 45 01 	call	0x28a	; 0x28a <MCP2515_bit_modify>
 27c:	40 e0       	ldi	r20, 0x00	; 0
 27e:	6f ef       	ldi	r22, 0xFF	; 255
 280:	8b e2       	ldi	r24, 0x2B	; 43
 282:	0e 94 45 01 	call	0x28a	; 0x28a <MCP2515_bit_modify>
 286:	cf 91       	pop	r28
 288:	08 95       	ret

0000028a <MCP2515_bit_modify>:
 28a:	1f 93       	push	r17
 28c:	cf 93       	push	r28
 28e:	df 93       	push	r29
 290:	18 2f       	mov	r17, r24
 292:	d6 2f       	mov	r29, r22
 294:	c4 2f       	mov	r28, r20
 296:	0e 94 8f 03 	call	0x71e	; 0x71e <SPI_enable>
 29a:	85 e0       	ldi	r24, 0x05	; 5
 29c:	0e 94 8b 03 	call	0x716	; 0x716 <SPI_transmit>
 2a0:	81 2f       	mov	r24, r17
 2a2:	0e 94 8b 03 	call	0x716	; 0x716 <SPI_transmit>
 2a6:	8d 2f       	mov	r24, r29
 2a8:	0e 94 8b 03 	call	0x716	; 0x716 <SPI_transmit>
 2ac:	8c 2f       	mov	r24, r28
 2ae:	0e 94 8b 03 	call	0x716	; 0x716 <SPI_transmit>
 2b2:	0e 94 91 03 	call	0x722	; 0x722 <SPI_disable>
 2b6:	df 91       	pop	r29
 2b8:	cf 91       	pop	r28
 2ba:	1f 91       	pop	r17
 2bc:	08 95       	ret

000002be <MCP2515_reset>:
 2be:	0e 94 8f 03 	call	0x71e	; 0x71e <SPI_enable>
 2c2:	80 ec       	ldi	r24, 0xC0	; 192
 2c4:	0e 94 8b 03 	call	0x716	; 0x716 <SPI_transmit>
 2c8:	0e 94 91 03 	call	0x722	; 0x722 <SPI_disable>
 2cc:	08 95       	ret

000002ce <menu_print>:

#include "menu.h"


void menu_print(int arrow_pos, char* menu_items[])
{
 2ce:	cf 92       	push	r12
 2d0:	df 92       	push	r13
 2d2:	ef 92       	push	r14
 2d4:	ff 92       	push	r15
 2d6:	0f 93       	push	r16
 2d8:	1f 93       	push	r17
 2da:	cf 93       	push	r28
 2dc:	df 93       	push	r29
 2de:	6c 01       	movw	r12, r24
 2e0:	eb 01       	movw	r28, r22
	uint8_t menu_size = *menu_items[0];
 2e2:	e8 81       	ld	r30, Y
 2e4:	f9 81       	ldd	r31, Y+1	; 0x01
 2e6:	e0 80       	ld	r14, Z
	OLED_pos(0,0);
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	80 e0       	ldi	r24, 0x00	; 0
 2ec:	0e 94 0e 03 	call	0x61c	; 0x61c <OLED_pos>
	OLED_print_string(menu_items[1]);
 2f0:	8a 81       	ldd	r24, Y+2	; 0x02
 2f2:	9b 81       	ldd	r25, Y+3	; 0x03
 2f4:	0e 94 64 03 	call	0x6c8	; 0x6c8 <OLED_print_string>
	for(int i = 2; i < (2 + menu_size); i++){
 2f8:	f1 2c       	mov	r15, r1
 2fa:	82 e0       	ldi	r24, 0x02	; 2
 2fc:	e8 0e       	add	r14, r24
 2fe:	f1 1c       	adc	r15, r1
 300:	e3 e0       	ldi	r30, 0x03	; 3
 302:	ee 16       	cp	r14, r30
 304:	f1 04       	cpc	r15, r1
 306:	0c f1       	brlt	.+66     	; 0x34a <menu_print+0x7c>
 308:	8e 01       	movw	r16, r28
 30a:	0c 5f       	subi	r16, 0xFC	; 252
 30c:	1f 4f       	sbci	r17, 0xFF	; 255
 30e:	c2 e0       	ldi	r28, 0x02	; 2
 310:	d0 e0       	ldi	r29, 0x00	; 0
		OLED_pos(i,0);
 312:	60 e0       	ldi	r22, 0x00	; 0
 314:	8c 2f       	mov	r24, r28
 316:	0e 94 0e 03 	call	0x61c	; 0x61c <OLED_pos>
		if(i == arrow_pos){
 31a:	cc 15       	cp	r28, r12
 31c:	dd 05       	cpc	r29, r13
 31e:	29 f4       	brne	.+10     	; 0x32a <menu_print+0x5c>
			OLED_print_string("->");
 320:	89 e3       	ldi	r24, 0x39	; 57
 322:	91 e0       	ldi	r25, 0x01	; 1
 324:	0e 94 64 03 	call	0x6c8	; 0x6c8 <OLED_print_string>
 328:	04 c0       	rjmp	.+8      	; 0x332 <menu_print+0x64>
		}
		else{
			OLED_print_string("  ");
 32a:	8c e3       	ldi	r24, 0x3C	; 60
 32c:	91 e0       	ldi	r25, 0x01	; 1
 32e:	0e 94 64 03 	call	0x6c8	; 0x6c8 <OLED_print_string>
		}
		OLED_print_string(menu_items[i]);
 332:	f8 01       	movw	r30, r16
 334:	81 91       	ld	r24, Z+
 336:	91 91       	ld	r25, Z+
 338:	8f 01       	movw	r16, r30
 33a:	0e 94 64 03 	call	0x6c8	; 0x6c8 <OLED_print_string>
		OLED_clear_rest_of_line();
 33e:	0e 94 17 03 	call	0x62e	; 0x62e <OLED_clear_rest_of_line>
void menu_print(int arrow_pos, char* menu_items[])
{
	uint8_t menu_size = *menu_items[0];
	OLED_pos(0,0);
	OLED_print_string(menu_items[1]);
	for(int i = 2; i < (2 + menu_size); i++){
 342:	21 96       	adiw	r28, 0x01	; 1
 344:	ce 15       	cp	r28, r14
 346:	df 05       	cpc	r29, r15
 348:	24 f3       	brlt	.-56     	; 0x312 <menu_print+0x44>
			OLED_print_string("  ");
		}
		OLED_print_string(menu_items[i]);
		OLED_clear_rest_of_line();
	}
}
 34a:	df 91       	pop	r29
 34c:	cf 91       	pop	r28
 34e:	1f 91       	pop	r17
 350:	0f 91       	pop	r16
 352:	ff 90       	pop	r15
 354:	ef 90       	pop	r14
 356:	df 90       	pop	r13
 358:	cf 90       	pop	r12
 35a:	08 95       	ret

0000035c <menu_move_selector>:

int menu_move_selector(char* menu[]){
 35c:	4f 92       	push	r4
 35e:	5f 92       	push	r5
 360:	6f 92       	push	r6
 362:	7f 92       	push	r7
 364:	8f 92       	push	r8
 366:	9f 92       	push	r9
 368:	af 92       	push	r10
 36a:	bf 92       	push	r11
 36c:	cf 92       	push	r12
 36e:	df 92       	push	r13
 370:	ef 92       	push	r14
 372:	ff 92       	push	r15
 374:	0f 93       	push	r16
 376:	1f 93       	push	r17
 378:	cf 93       	push	r28
 37a:	df 93       	push	r29
 37c:	7c 01       	movw	r14, r24
	uint8_t menu_size = *menu[0];
 37e:	dc 01       	movw	r26, r24
 380:	ed 91       	ld	r30, X+
 382:	fc 91       	ld	r31, X
 384:	c0 80       	ld	r12, Z
	int arrow = 2;
	int neutral_counter = 0;
	JOY_direction_t prev_dir = NEUTRAL;
 386:	68 94       	set
 388:	bb 24       	eor	r11, r11
 38a:	b2 f8       	bld	r11, 2
}

int menu_move_selector(char* menu[]){
	uint8_t menu_size = *menu[0];
	int arrow = 2;
	int neutral_counter = 0;
 38c:	00 e0       	ldi	r16, 0x00	; 0
 38e:	10 e0       	ldi	r17, 0x00	; 0
	}
}

int menu_move_selector(char* menu[]){
	uint8_t menu_size = *menu[0];
	int arrow = 2;
 390:	c2 e0       	ldi	r28, 0x02	; 2
 392:	d0 e0       	ldi	r29, 0x00	; 0
	int neutral_counter = 0;
	JOY_direction_t prev_dir = NEUTRAL;
	while(1){
		switch(Joy_getDirection()){
			case UP:
			if ((arrow > 2) & (prev_dir == NEUTRAL)){
 394:	aa 24       	eor	r10, r10
 396:	a3 94       	inc	r10
				arrow--;
				prev_dir = UP;
 398:	68 94       	set
 39a:	55 24       	eor	r5, r5
 39c:	51 f8       	bld	r5, 1
	int neutral_counter = 0;
	JOY_direction_t prev_dir = NEUTRAL;
	while(1){
		switch(Joy_getDirection()){
			case UP:
			if ((arrow > 2) & (prev_dir == NEUTRAL)){
 39e:	91 2c       	mov	r9, r1
			}
			break;
			default:
			neutral_counter++;
			if (neutral_counter > 150){
				prev_dir = NEUTRAL;
 3a0:	68 94       	set
 3a2:	66 24       	eor	r6, r6
 3a4:	62 f8       	bld	r6, 2
				neutral_counter = 0;
 3a6:	71 2c       	mov	r7, r1
 3a8:	81 2c       	mov	r8, r1
				arrow--;
				prev_dir = UP;
			}
			break;
			case DOWN:
			if ((arrow < menu_size-1) & (prev_dir == NEUTRAL)){
 3aa:	d1 2c       	mov	r13, r1
 3ac:	b1 e0       	ldi	r27, 0x01	; 1
 3ae:	cb 1a       	sub	r12, r27
 3b0:	d1 08       	sbc	r13, r1
				arrow++;
				prev_dir = DOWN;
 3b2:	0f 2e       	mov	r0, r31
 3b4:	f3 e0       	ldi	r31, 0x03	; 3
 3b6:	4f 2e       	mov	r4, r31
 3b8:	f0 2d       	mov	r31, r0
	uint8_t menu_size = *menu[0];
	int arrow = 2;
	int neutral_counter = 0;
	JOY_direction_t prev_dir = NEUTRAL;
	while(1){
		switch(Joy_getDirection()){
 3ba:	0e 94 8d 02 	call	0x51a	; 0x51a <Joy_getDirection>
 3be:	82 30       	cpi	r24, 0x02	; 2
 3c0:	19 f0       	breq	.+6      	; 0x3c8 <menu_move_selector+0x6c>
 3c2:	83 30       	cpi	r24, 0x03	; 3
 3c4:	89 f0       	breq	.+34     	; 0x3e8 <menu_move_selector+0x8c>
 3c6:	20 c0       	rjmp	.+64     	; 0x408 <menu_move_selector+0xac>
			case UP:
			if ((arrow > 2) & (prev_dir == NEUTRAL)){
 3c8:	8a 2d       	mov	r24, r10
 3ca:	94 e0       	ldi	r25, 0x04	; 4
 3cc:	b9 12       	cpse	r11, r25
 3ce:	89 2d       	mov	r24, r9
 3d0:	88 23       	and	r24, r24
 3d2:	11 f1       	breq	.+68     	; 0x418 <menu_move_selector+0xbc>
 3d4:	8a 2d       	mov	r24, r10
 3d6:	c3 30       	cpi	r28, 0x03	; 3
 3d8:	d1 05       	cpc	r29, r1
 3da:	0c f4       	brge	.+2      	; 0x3de <menu_move_selector+0x82>
 3dc:	89 2d       	mov	r24, r9
 3de:	88 23       	and	r24, r24
 3e0:	d9 f0       	breq	.+54     	; 0x418 <menu_move_selector+0xbc>
				arrow--;
 3e2:	21 97       	sbiw	r28, 0x01	; 1
				prev_dir = UP;
 3e4:	b5 2c       	mov	r11, r5
 3e6:	18 c0       	rjmp	.+48     	; 0x418 <menu_move_selector+0xbc>
			}
			break;
			case DOWN:
			if ((arrow < menu_size-1) & (prev_dir == NEUTRAL)){
 3e8:	8a 2d       	mov	r24, r10
 3ea:	a4 e0       	ldi	r26, 0x04	; 4
 3ec:	ba 12       	cpse	r11, r26
 3ee:	89 2d       	mov	r24, r9
 3f0:	88 23       	and	r24, r24
 3f2:	91 f0       	breq	.+36     	; 0x418 <menu_move_selector+0xbc>
 3f4:	8a 2d       	mov	r24, r10
 3f6:	cc 15       	cp	r28, r12
 3f8:	dd 05       	cpc	r29, r13
 3fa:	0c f0       	brlt	.+2      	; 0x3fe <menu_move_selector+0xa2>
 3fc:	89 2d       	mov	r24, r9
 3fe:	88 23       	and	r24, r24
 400:	59 f0       	breq	.+22     	; 0x418 <menu_move_selector+0xbc>
				arrow++;
 402:	21 96       	adiw	r28, 0x01	; 1
				prev_dir = DOWN;
 404:	b4 2c       	mov	r11, r4
 406:	08 c0       	rjmp	.+16     	; 0x418 <menu_move_selector+0xbc>
			}
			break;
			default:
			neutral_counter++;
 408:	0f 5f       	subi	r16, 0xFF	; 255
 40a:	1f 4f       	sbci	r17, 0xFF	; 255
			if (neutral_counter > 150){
 40c:	07 39       	cpi	r16, 0x97	; 151
 40e:	11 05       	cpc	r17, r1
 410:	1c f0       	brlt	.+6      	; 0x418 <menu_move_selector+0xbc>
				prev_dir = NEUTRAL;
 412:	b6 2c       	mov	r11, r6
				neutral_counter = 0;
 414:	07 2d       	mov	r16, r7
 416:	18 2d       	mov	r17, r8
			}
			break;
		}
		if(!JOY_button(2)){
 418:	82 e0       	ldi	r24, 0x02	; 2
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	0e 94 46 02 	call	0x48c	; 0x48c <JOY_button>
 420:	81 11       	cpse	r24, r1
 422:	07 c0       	rjmp	.+14     	; 0x432 <menu_move_selector+0xd6>
			while(!JOY_button(2)){}
 424:	82 e0       	ldi	r24, 0x02	; 2
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	0e 94 46 02 	call	0x48c	; 0x48c <JOY_button>
 42c:	88 23       	and	r24, r24
 42e:	d1 f3       	breq	.-12     	; 0x424 <menu_move_selector+0xc8>
 430:	05 c0       	rjmp	.+10     	; 0x43c <menu_move_selector+0xe0>
			return arrow;
		}
		menu_print(arrow, menu);
 432:	b7 01       	movw	r22, r14
 434:	ce 01       	movw	r24, r28
 436:	0e 94 67 01 	call	0x2ce	; 0x2ce <menu_print>
	}
 43a:	bf cf       	rjmp	.-130    	; 0x3ba <menu_move_selector+0x5e>
 43c:	ce 01       	movw	r24, r28
 43e:	df 91       	pop	r29
 440:	cf 91       	pop	r28
 442:	1f 91       	pop	r17
 444:	0f 91       	pop	r16
 446:	ff 90       	pop	r15
 448:	ef 90       	pop	r14
 44a:	df 90       	pop	r13
 44c:	cf 90       	pop	r12
 44e:	bf 90       	pop	r11
 450:	af 90       	pop	r10
 452:	9f 90       	pop	r9
 454:	8f 90       	pop	r8
 456:	7f 90       	pop	r7
 458:	6f 90       	pop	r6
 45a:	5f 90       	pop	r5
 45c:	4f 90       	pop	r4
 45e:	08 95       	ret

00000460 <JOY_calibrate>:
 460:	80 e0       	ldi	r24, 0x00	; 0
 462:	0e 94 1d 01 	call	0x23a	; 0x23a <ADC_read>
 466:	80 93 f8 01 	sts	0x01F8, r24
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	0e 94 1d 01 	call	0x23a	; 0x23a <ADC_read>
 470:	80 93 f9 01 	sts	0x01F9, r24
 474:	08 95       	ret

00000476 <JOY_init>:
 476:	0e 94 15 01 	call	0x22a	; 0x22a <ADC_init>
 47a:	87 b3       	in	r24, 0x17	; 23
 47c:	88 7f       	andi	r24, 0xF8	; 248
 47e:	87 bb       	out	0x17, r24	; 23
 480:	88 b3       	in	r24, 0x18	; 24
 482:	87 60       	ori	r24, 0x07	; 7
 484:	88 bb       	out	0x18, r24	; 24
 486:	0e 94 30 02 	call	0x460	; 0x460 <JOY_calibrate>
 48a:	08 95       	ret

0000048c <JOY_button>:
 48c:	81 30       	cpi	r24, 0x01	; 1
 48e:	91 05       	cpc	r25, r1
 490:	41 f0       	breq	.+16     	; 0x4a2 <JOY_button+0x16>
 492:	82 30       	cpi	r24, 0x02	; 2
 494:	91 05       	cpc	r25, r1
 496:	49 f0       	breq	.+18     	; 0x4aa <JOY_button+0x1e>
 498:	89 2b       	or	r24, r25
 49a:	61 f4       	brne	.+24     	; 0x4b4 <JOY_button+0x28>
 49c:	86 b3       	in	r24, 0x16	; 22
 49e:	81 70       	andi	r24, 0x01	; 1
 4a0:	08 95       	ret
 4a2:	86 b3       	in	r24, 0x16	; 22
 4a4:	86 95       	lsr	r24
 4a6:	81 70       	andi	r24, 0x01	; 1
 4a8:	08 95       	ret
 4aa:	86 b3       	in	r24, 0x16	; 22
 4ac:	82 fb       	bst	r24, 2
 4ae:	88 27       	eor	r24, r24
 4b0:	80 f9       	bld	r24, 0
 4b2:	08 95       	ret
 4b4:	80 e0       	ldi	r24, 0x00	; 0
 4b6:	08 95       	ret

000004b8 <JOY_getPosition>:
 4b8:	0f 93       	push	r16
 4ba:	1f 93       	push	r17
 4bc:	cf 93       	push	r28
 4be:	df 93       	push	r29
 4c0:	80 e0       	ldi	r24, 0x00	; 0
 4c2:	0e 94 1d 01 	call	0x23a	; 0x23a <ADC_read>
 4c6:	28 2f       	mov	r18, r24
 4c8:	30 e0       	ldi	r19, 0x00	; 0
 4ca:	80 91 f8 01 	lds	r24, 0x01F8
 4ce:	28 1b       	sub	r18, r24
 4d0:	31 09       	sbc	r19, r1
 4d2:	14 e6       	ldi	r17, 0x64	; 100
 4d4:	12 9f       	mul	r17, r18
 4d6:	c0 01       	movw	r24, r0
 4d8:	13 9f       	mul	r17, r19
 4da:	90 0d       	add	r25, r0
 4dc:	11 24       	eor	r1, r1
 4de:	cf e7       	ldi	r28, 0x7F	; 127
 4e0:	d0 e0       	ldi	r29, 0x00	; 0
 4e2:	be 01       	movw	r22, r28
 4e4:	0e 94 1f 04 	call	0x83e	; 0x83e <__divmodhi4>
 4e8:	06 2f       	mov	r16, r22
 4ea:	81 e0       	ldi	r24, 0x01	; 1
 4ec:	0e 94 1d 01 	call	0x23a	; 0x23a <ADC_read>
 4f0:	48 2f       	mov	r20, r24
 4f2:	50 e0       	ldi	r21, 0x00	; 0
 4f4:	80 91 f9 01 	lds	r24, 0x01F9
 4f8:	48 1b       	sub	r20, r24
 4fa:	51 09       	sbc	r21, r1
 4fc:	14 9f       	mul	r17, r20
 4fe:	c0 01       	movw	r24, r0
 500:	15 9f       	mul	r17, r21
 502:	90 0d       	add	r25, r0
 504:	11 24       	eor	r1, r1
 506:	be 01       	movw	r22, r28
 508:	0e 94 1f 04 	call	0x83e	; 0x83e <__divmodhi4>
 50c:	96 2f       	mov	r25, r22
 50e:	80 2f       	mov	r24, r16
 510:	df 91       	pop	r29
 512:	cf 91       	pop	r28
 514:	1f 91       	pop	r17
 516:	0f 91       	pop	r16
 518:	08 95       	ret

0000051a <Joy_getDirection>:
 51a:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <JOY_getPosition>
 51e:	83 3d       	cpi	r24, 0xD3	; 211
 520:	44 f0       	brlt	.+16     	; 0x532 <Joy_getDirection+0x18>
 522:	8e 32       	cpi	r24, 0x2E	; 46
 524:	44 f4       	brge	.+16     	; 0x536 <Joy_getDirection+0x1c>
 526:	9e 32       	cpi	r25, 0x2E	; 46
 528:	44 f4       	brge	.+16     	; 0x53a <Joy_getDirection+0x20>
 52a:	93 3d       	cpi	r25, 0xD3	; 211
 52c:	44 f4       	brge	.+16     	; 0x53e <Joy_getDirection+0x24>
 52e:	83 e0       	ldi	r24, 0x03	; 3
 530:	08 95       	ret
 532:	80 e0       	ldi	r24, 0x00	; 0
 534:	08 95       	ret
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	08 95       	ret
 53a:	82 e0       	ldi	r24, 0x02	; 2
 53c:	08 95       	ret
 53e:	84 e0       	ldi	r24, 0x04	; 4
 540:	08 95       	ret

00000542 <OLED_go_to_page>:
 542:	90 eb       	ldi	r25, 0xB0	; 176
 544:	98 0f       	add	r25, r24
 546:	90 93 00 10 	sts	0x1000, r25
 54a:	80 93 fa 01 	sts	0x01FA, r24
 54e:	08 95       	ret

00000550 <OLED_clear_page>:
 550:	0e 94 a1 02 	call	0x542	; 0x542 <OLED_go_to_page>
 554:	80 e8       	ldi	r24, 0x80	; 128
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	e0 e0       	ldi	r30, 0x00	; 0
 55a:	f2 e1       	ldi	r31, 0x12	; 18
 55c:	10 82       	st	Z, r1
 55e:	01 97       	sbiw	r24, 0x01	; 1
 560:	00 97       	sbiw	r24, 0x00	; 0
 562:	e1 f7       	brne	.-8      	; 0x55c <OLED_clear_page+0xc>
 564:	08 95       	ret

00000566 <OLED_reset>:
 566:	cf 93       	push	r28
 568:	c0 e0       	ldi	r28, 0x00	; 0
 56a:	8c 2f       	mov	r24, r28
 56c:	0e 94 a8 02 	call	0x550	; 0x550 <OLED_clear_page>
 570:	cf 5f       	subi	r28, 0xFF	; 255
 572:	c8 30       	cpi	r28, 0x08	; 8
 574:	d1 f7       	brne	.-12     	; 0x56a <OLED_reset+0x4>
 576:	cf 91       	pop	r28
 578:	08 95       	ret

0000057a <OLED_go_to_col>:
 57a:	98 2f       	mov	r25, r24
 57c:	9f 70       	andi	r25, 0x0F	; 15
 57e:	28 2f       	mov	r18, r24
 580:	22 95       	swap	r18
 582:	2f 70       	andi	r18, 0x0F	; 15
 584:	20 5f       	subi	r18, 0xF0	; 240
 586:	e0 e0       	ldi	r30, 0x00	; 0
 588:	f0 e1       	ldi	r31, 0x10	; 16
 58a:	20 83       	st	Z, r18
 58c:	90 83       	st	Z, r25
 58e:	80 93 fb 01 	sts	0x01FB, r24
 592:	08 95       	ret

00000594 <OLED_home>:
 594:	80 e0       	ldi	r24, 0x00	; 0
 596:	0e 94 a1 02 	call	0x542	; 0x542 <OLED_go_to_page>
 59a:	80 e0       	ldi	r24, 0x00	; 0
 59c:	0e 94 bd 02 	call	0x57a	; 0x57a <OLED_go_to_col>
 5a0:	08 95       	ret

000005a2 <OLED_init>:
 5a2:	85 b7       	in	r24, 0x35	; 53
 5a4:	80 68       	ori	r24, 0x80	; 128
 5a6:	85 bf       	out	0x35, r24	; 53
 5a8:	80 b7       	in	r24, 0x30	; 48
 5aa:	80 62       	ori	r24, 0x20	; 32
 5ac:	80 bf       	out	0x30, r24	; 48
 5ae:	e0 e0       	ldi	r30, 0x00	; 0
 5b0:	f0 e1       	ldi	r31, 0x10	; 16
 5b2:	8e ea       	ldi	r24, 0xAE	; 174
 5b4:	80 83       	st	Z, r24
 5b6:	81 ea       	ldi	r24, 0xA1	; 161
 5b8:	80 83       	st	Z, r24
 5ba:	8a ed       	ldi	r24, 0xDA	; 218
 5bc:	80 83       	st	Z, r24
 5be:	82 e1       	ldi	r24, 0x12	; 18
 5c0:	80 83       	st	Z, r24
 5c2:	88 ec       	ldi	r24, 0xC8	; 200
 5c4:	80 83       	st	Z, r24
 5c6:	88 ea       	ldi	r24, 0xA8	; 168
 5c8:	80 83       	st	Z, r24
 5ca:	8f e3       	ldi	r24, 0x3F	; 63
 5cc:	80 83       	st	Z, r24
 5ce:	85 ed       	ldi	r24, 0xD5	; 213
 5d0:	80 83       	st	Z, r24
 5d2:	80 e8       	ldi	r24, 0x80	; 128
 5d4:	80 83       	st	Z, r24
 5d6:	81 e8       	ldi	r24, 0x81	; 129
 5d8:	80 83       	st	Z, r24
 5da:	80 e5       	ldi	r24, 0x50	; 80
 5dc:	80 83       	st	Z, r24
 5de:	89 ed       	ldi	r24, 0xD9	; 217
 5e0:	80 83       	st	Z, r24
 5e2:	81 e2       	ldi	r24, 0x21	; 33
 5e4:	80 83       	st	Z, r24
 5e6:	80 e2       	ldi	r24, 0x20	; 32
 5e8:	80 83       	st	Z, r24
 5ea:	82 e0       	ldi	r24, 0x02	; 2
 5ec:	80 83       	st	Z, r24
 5ee:	8b ed       	ldi	r24, 0xDB	; 219
 5f0:	80 83       	st	Z, r24
 5f2:	80 e3       	ldi	r24, 0x30	; 48
 5f4:	80 83       	st	Z, r24
 5f6:	8d ea       	ldi	r24, 0xAD	; 173
 5f8:	80 83       	st	Z, r24
 5fa:	10 82       	st	Z, r1
 5fc:	84 ea       	ldi	r24, 0xA4	; 164
 5fe:	80 83       	st	Z, r24
 600:	86 ea       	ldi	r24, 0xA6	; 166
 602:	80 83       	st	Z, r24
 604:	8f ea       	ldi	r24, 0xAF	; 175
 606:	80 83       	st	Z, r24
 608:	80 eb       	ldi	r24, 0xB0	; 176
 60a:	80 83       	st	Z, r24
 60c:	10 82       	st	Z, r1
 60e:	80 e1       	ldi	r24, 0x10	; 16
 610:	80 83       	st	Z, r24
 612:	0e 94 b3 02 	call	0x566	; 0x566 <OLED_reset>
 616:	0e 94 ca 02 	call	0x594	; 0x594 <OLED_home>
 61a:	08 95       	ret

0000061c <OLED_pos>:
 61c:	cf 93       	push	r28
 61e:	c6 2f       	mov	r28, r22
 620:	0e 94 a1 02 	call	0x542	; 0x542 <OLED_go_to_page>
 624:	8c 2f       	mov	r24, r28
 626:	0e 94 bd 02 	call	0x57a	; 0x57a <OLED_go_to_col>
 62a:	cf 91       	pop	r28
 62c:	08 95       	ret

0000062e <OLED_clear_rest_of_line>:
 62e:	80 91 fb 01 	lds	r24, 0x01FB
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	80 38       	cpi	r24, 0x80	; 128
 636:	91 05       	cpc	r25, r1
 638:	3c f4       	brge	.+14     	; 0x648 <OLED_clear_rest_of_line+0x1a>
 63a:	e0 e0       	ldi	r30, 0x00	; 0
 63c:	f2 e1       	ldi	r31, 0x12	; 18
 63e:	10 82       	st	Z, r1
 640:	01 96       	adiw	r24, 0x01	; 1
 642:	80 38       	cpi	r24, 0x80	; 128
 644:	91 05       	cpc	r25, r1
 646:	d9 f7       	brne	.-10     	; 0x63e <OLED_clear_rest_of_line+0x10>
 648:	10 92 fb 01 	sts	0x01FB, r1
 64c:	08 95       	ret

0000064e <OLED_print>:
 64e:	8a 30       	cpi	r24, 0x0A	; 10
 650:	41 f0       	breq	.+16     	; 0x662 <OLED_print+0x14>
 652:	90 91 08 01 	lds	r25, 0x0108
 656:	49 2f       	mov	r20, r25
 658:	50 e0       	ldi	r21, 0x00	; 0
 65a:	14 16       	cp	r1, r20
 65c:	15 06       	cpc	r1, r21
 65e:	24 f0       	brlt	.+8      	; 0x668 <OLED_print+0x1a>
 660:	25 c0       	rjmp	.+74     	; 0x6ac <OLED_print+0x5e>
 662:	0e 94 17 03 	call	0x62e	; 0x62e <OLED_clear_rest_of_line>
 666:	08 95       	ret
 668:	20 e0       	ldi	r18, 0x00	; 0
 66a:	30 e0       	ldi	r19, 0x00	; 0
 66c:	68 2f       	mov	r22, r24
 66e:	70 e0       	ldi	r23, 0x00	; 0
 670:	60 52       	subi	r22, 0x20	; 32
 672:	71 09       	sbc	r23, r1
 674:	a0 e0       	ldi	r26, 0x00	; 0
 676:	b2 e1       	ldi	r27, 0x12	; 18
 678:	46 9f       	mul	r20, r22
 67a:	f0 01       	movw	r30, r0
 67c:	47 9f       	mul	r20, r23
 67e:	f0 0d       	add	r31, r0
 680:	56 9f       	mul	r21, r22
 682:	f0 0d       	add	r31, r0
 684:	11 24       	eor	r1, r1
 686:	e2 0f       	add	r30, r18
 688:	f3 1f       	adc	r31, r19
 68a:	80 91 06 01 	lds	r24, 0x0106
 68e:	90 91 07 01 	lds	r25, 0x0107
 692:	e8 0f       	add	r30, r24
 694:	f9 1f       	adc	r31, r25
 696:	e4 91       	lpm	r30, Z
 698:	ec 93       	st	X, r30
 69a:	2f 5f       	subi	r18, 0xFF	; 255
 69c:	3f 4f       	sbci	r19, 0xFF	; 255
 69e:	90 91 08 01 	lds	r25, 0x0108
 6a2:	49 2f       	mov	r20, r25
 6a4:	50 e0       	ldi	r21, 0x00	; 0
 6a6:	24 17       	cp	r18, r20
 6a8:	35 07       	cpc	r19, r21
 6aa:	34 f3       	brlt	.-52     	; 0x678 <OLED_print+0x2a>
 6ac:	80 91 fb 01 	lds	r24, 0x01FB
 6b0:	48 0f       	add	r20, r24
 6b2:	51 1d       	adc	r21, r1
 6b4:	40 38       	cpi	r20, 0x80	; 128
 6b6:	51 05       	cpc	r21, r1
 6b8:	1c f0       	brlt	.+6      	; 0x6c0 <OLED_print+0x72>
 6ba:	10 92 fb 01 	sts	0x01FB, r1
 6be:	08 95       	ret
 6c0:	98 0f       	add	r25, r24
 6c2:	90 93 fb 01 	sts	0x01FB, r25
 6c6:	08 95       	ret

000006c8 <OLED_print_string>:
 6c8:	ef 92       	push	r14
 6ca:	ff 92       	push	r15
 6cc:	0f 93       	push	r16
 6ce:	1f 93       	push	r17
 6d0:	cf 93       	push	r28
 6d2:	df 93       	push	r29
 6d4:	8c 01       	movw	r16, r24
 6d6:	7c 01       	movw	r14, r24
 6d8:	c0 e0       	ldi	r28, 0x00	; 0
 6da:	d0 e0       	ldi	r29, 0x00	; 0
 6dc:	06 c0       	rjmp	.+12     	; 0x6ea <OLED_print_string+0x22>
 6de:	f7 01       	movw	r30, r14
 6e0:	81 91       	ld	r24, Z+
 6e2:	7f 01       	movw	r14, r30
 6e4:	0e 94 27 03 	call	0x64e	; 0x64e <OLED_print>
 6e8:	21 96       	adiw	r28, 0x01	; 1
 6ea:	f8 01       	movw	r30, r16
 6ec:	01 90       	ld	r0, Z+
 6ee:	00 20       	and	r0, r0
 6f0:	e9 f7       	brne	.-6      	; 0x6ec <OLED_print_string+0x24>
 6f2:	31 97       	sbiw	r30, 0x01	; 1
 6f4:	e0 1b       	sub	r30, r16
 6f6:	f1 0b       	sbc	r31, r17
 6f8:	ce 17       	cp	r28, r30
 6fa:	df 07       	cpc	r29, r31
 6fc:	80 f3       	brcs	.-32     	; 0x6de <OLED_print_string+0x16>
 6fe:	df 91       	pop	r29
 700:	cf 91       	pop	r28
 702:	1f 91       	pop	r17
 704:	0f 91       	pop	r16
 706:	ff 90       	pop	r15
 708:	ef 90       	pop	r14
 70a:	08 95       	ret

0000070c <SPI_init>:
#include "SPI_driver.h"

void SPI_init(void){
	/* Set MOSI, SCK and SS output, all others input */
	DDRB = (1<<PB5)|(1<<PB7)|(1<<PB4);
 70c:	80 eb       	ldi	r24, 0xB0	; 176
 70e:	87 bb       	out	0x17, r24	; 23
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 710:	81 e5       	ldi	r24, 0x51	; 81
 712:	8d b9       	out	0x0d, r24	; 13
 714:	08 95       	ret

00000716 <SPI_transmit>:
}

void SPI_transmit(char cData){
	/* Start transmission */
	SPDR = cData;
 716:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
 718:	77 9b       	sbis	0x0e, 7	; 14
 71a:	fe cf       	rjmp	.-4      	; 0x718 <SPI_transmit+0x2>
}
 71c:	08 95       	ret

0000071e <SPI_enable>:
	SPI_transmit(0x00);
	return SPDR;
}

void SPI_enable(){
		PORTB &= ~(1<<PINB4);
 71e:	c4 98       	cbi	0x18, 4	; 24
 720:	08 95       	ret

00000722 <SPI_disable>:
}

void SPI_disable(){
	PORTB |= (1<<PINB4);
 722:	c4 9a       	sbi	0x18, 4	; 24
 724:	08 95       	ret

00000726 <main>:
#include "test.h"
#include "oled_driver.h"


int main(void)
{	
 726:	cf 93       	push	r28
 728:	df 93       	push	r29
 72a:	cd b7       	in	r28, 0x3d	; 61
 72c:	de b7       	in	r29, 0x3e	; 62
 72e:	e0 97       	sbiw	r28, 0x30	; 48
 730:	0f b6       	in	r0, 0x3f	; 63
 732:	f8 94       	cli
 734:	de bf       	out	0x3e, r29	; 62
 736:	0f be       	out	0x3f, r0	; 63
 738:	cd bf       	out	0x3d, r28	; 61
	char* main_menu[] = {2, "Main Menu:", "New game", "Options"};
 73a:	88 e0       	ldi	r24, 0x08	; 8
 73c:	e9 e0       	ldi	r30, 0x09	; 9
 73e:	f1 e0       	ldi	r31, 0x01	; 1
 740:	de 01       	movw	r26, r28
 742:	11 96       	adiw	r26, 0x01	; 1
 744:	01 90       	ld	r0, Z+
 746:	0d 92       	st	X+, r0
 748:	8a 95       	dec	r24
 74a:	e1 f7       	brne	.-8      	; 0x744 <main+0x1e>
	char* new_game[] = {3, "New Game:", "Single player", "Double player", "Back"};
 74c:	8a e0       	ldi	r24, 0x0A	; 10
 74e:	e1 e1       	ldi	r30, 0x11	; 17
 750:	f1 e0       	ldi	r31, 0x01	; 1
 752:	de 01       	movw	r26, r28
 754:	19 96       	adiw	r26, 0x09	; 9
 756:	01 90       	ld	r0, Z+
 758:	0d 92       	st	X+, r0
 75a:	8a 95       	dec	r24
 75c:	e1 f7       	brne	.-8      	; 0x756 <main+0x30>
	char* single_player[] = {2, "Single player:", "Ready?", "Back"};
 75e:	88 e0       	ldi	r24, 0x08	; 8
 760:	eb e1       	ldi	r30, 0x1B	; 27
 762:	f1 e0       	ldi	r31, 0x01	; 1
 764:	de 01       	movw	r26, r28
 766:	53 96       	adiw	r26, 0x13	; 19
 768:	01 90       	ld	r0, Z+
 76a:	0d 92       	st	X+, r0
 76c:	8a 95       	dec	r24
 76e:	e1 f7       	brne	.-8      	; 0x768 <main+0x42>
	char* double_player[] = {2, "Double player:", "Ready?", "Back"};
 770:	88 e0       	ldi	r24, 0x08	; 8
 772:	e3 e2       	ldi	r30, 0x23	; 35
 774:	f1 e0       	ldi	r31, 0x01	; 1
 776:	de 01       	movw	r26, r28
 778:	5b 96       	adiw	r26, 0x1b	; 27
 77a:	01 90       	ld	r0, Z+
 77c:	0d 92       	st	X+, r0
 77e:	8a 95       	dec	r24
 780:	e1 f7       	brne	.-8      	; 0x77a <main+0x54>
	char* options[] = {3, "Options:","Control type" "Controller" "back"};
 782:	86 e0       	ldi	r24, 0x06	; 6
 784:	eb e2       	ldi	r30, 0x2B	; 43
 786:	f1 e0       	ldi	r31, 0x01	; 1
 788:	de 01       	movw	r26, r28
 78a:	93 96       	adiw	r26, 0x23	; 35
 78c:	01 90       	ld	r0, Z+
 78e:	0d 92       	st	X+, r0
 790:	8a 95       	dec	r24
 792:	e1 f7       	brne	.-8      	; 0x78c <main+0x66>
	char* controller[] = {2, "Choose controller:", "IO-board", "DualShock 3"};
 794:	88 e0       	ldi	r24, 0x08	; 8
 796:	e1 e3       	ldi	r30, 0x31	; 49
 798:	f1 e0       	ldi	r31, 0x01	; 1
 79a:	de 01       	movw	r26, r28
 79c:	99 96       	adiw	r26, 0x29	; 41
 79e:	01 90       	ld	r0, Z+
 7a0:	0d 92       	st	X+, r0
 7a2:	8a 95       	dec	r24
 7a4:	e1 f7       	brne	.-8      	; 0x79e <main+0x78>
	uint8_t mode = 0; // 0: Setupmode; 1: 
	
	

	int ubrr = (F_CPU/16/9600)-1;
	UART_Init(ubrr);
 7a6:	8f e1       	ldi	r24, 0x1F	; 31
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	0e 94 14 04 	call	0x828	; 0x828 <UART_Init>
	
	can_init(MODE_NORMAL);
 7ae:	80 e0       	ldi	r24, 0x00	; 0
 7b0:	0e 94 29 01 	call	0x252	; 0x252 <can_init>
	JOY_init();
 7b4:	0e 94 3b 02 	call	0x476	; 0x476 <JOY_init>
	OLED_init();
 7b8:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <OLED_init>
	JOY_position_t pos;
	
	while(1){
		switch(mode){
			case 0:
				switch(menu_move_selector(main_menu)){
 7bc:	ce 01       	movw	r24, r28
 7be:	01 96       	adiw	r24, 0x01	; 1
 7c0:	0e 94 ae 01 	call	0x35c	; 0x35c <menu_move_selector>
 7c4:	00 97       	sbiw	r24, 0x00	; 0
 7c6:	19 f0       	breq	.+6      	; 0x7ce <main+0xa8>
 7c8:	01 97       	sbiw	r24, 0x01	; 1
 7ca:	99 f0       	breq	.+38     	; 0x7f2 <main+0xcc>
 7cc:	f7 cf       	rjmp	.-18     	; 0x7bc <main+0x96>
					case 0:
						switch(menu_move_selector(new_game)){
 7ce:	ce 01       	movw	r24, r28
 7d0:	09 96       	adiw	r24, 0x09	; 9
 7d2:	0e 94 ae 01 	call	0x35c	; 0x35c <menu_move_selector>
 7d6:	00 97       	sbiw	r24, 0x00	; 0
 7d8:	19 f0       	breq	.+6      	; 0x7e0 <main+0xba>
 7da:	01 97       	sbiw	r24, 0x01	; 1
 7dc:	31 f0       	breq	.+12     	; 0x7ea <main+0xc4>
 7de:	09 c0       	rjmp	.+18     	; 0x7f2 <main+0xcc>
							case 0:
								switch(menu_move_selector(single_player)){
 7e0:	ce 01       	movw	r24, r28
 7e2:	43 96       	adiw	r24, 0x13	; 19
 7e4:	0e 94 ae 01 	call	0x35c	; 0x35c <menu_move_selector>
 7e8:	04 c0       	rjmp	.+8      	; 0x7f2 <main+0xcc>
									case 1:
										break;
								}
								break;
							case 1:
								switch(menu_move_selector(double_player)){
 7ea:	ce 01       	movw	r24, r28
 7ec:	4b 96       	adiw	r24, 0x1b	; 27
 7ee:	0e 94 ae 01 	call	0x35c	; 0x35c <menu_move_selector>
										break;
								}
								break;
						}
					case 1:
						switch(menu_move_selector(options)){
 7f2:	ce 01       	movw	r24, r28
 7f4:	83 96       	adiw	r24, 0x23	; 35
 7f6:	0e 94 ae 01 	call	0x35c	; 0x35c <menu_move_selector>
 7fa:	00 97       	sbiw	r24, 0x00	; 0
 7fc:	19 f0       	breq	.+6      	; 0x804 <main+0xde>
 7fe:	01 97       	sbiw	r24, 0x01	; 1
 800:	31 f0       	breq	.+12     	; 0x80e <main+0xe8>
 802:	dc cf       	rjmp	.-72     	; 0x7bc <main+0x96>
							case 0:
								switch(menu_move_selector(control_type)){
 804:	83 e0       	ldi	r24, 0x03	; 3
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	0e 94 ae 01 	call	0x35c	; 0x35c <menu_move_selector>
 80c:	d7 cf       	rjmp	.-82     	; 0x7bc <main+0x96>
										setup.data[1] = 1;
										break;
								}
								break;
							case 1:
								switch(menu_move_selector(controller)){
 80e:	ce 01       	movw	r24, r28
 810:	89 96       	adiw	r24, 0x29	; 41
 812:	0e 94 ae 01 	call	0x35c	; 0x35c <menu_move_selector>
 816:	d2 cf       	rjmp	.-92     	; 0x7bc <main+0x96>

00000818 <UART_Transmit>:
 818:	5d 9b       	sbis	0x0b, 5	; 11
 81a:	fe cf       	rjmp	.-4      	; 0x818 <UART_Transmit>
 81c:	8c b9       	out	0x0c, r24	; 12
 81e:	08 95       	ret

00000820 <UART_Receive>:
 820:	5f 9b       	sbis	0x0b, 7	; 11
 822:	fe cf       	rjmp	.-4      	; 0x820 <UART_Receive>
 824:	8c b1       	in	r24, 0x0c	; 12
 826:	08 95       	ret

00000828 <UART_Init>:
 828:	90 bd       	out	0x20, r25	; 32
 82a:	89 b9       	out	0x09, r24	; 9
 82c:	88 e1       	ldi	r24, 0x18	; 24
 82e:	8a b9       	out	0x0a, r24	; 10
 830:	60 e1       	ldi	r22, 0x10	; 16
 832:	74 e0       	ldi	r23, 0x04	; 4
 834:	8c e0       	ldi	r24, 0x0C	; 12
 836:	94 e0       	ldi	r25, 0x04	; 4
 838:	0e 94 47 04 	call	0x88e	; 0x88e <fdevopen>
 83c:	08 95       	ret

0000083e <__divmodhi4>:
 83e:	97 fb       	bst	r25, 7
 840:	07 2e       	mov	r0, r23
 842:	16 f4       	brtc	.+4      	; 0x848 <__divmodhi4+0xa>
 844:	00 94       	com	r0
 846:	07 d0       	rcall	.+14     	; 0x856 <__divmodhi4_neg1>
 848:	77 fd       	sbrc	r23, 7
 84a:	09 d0       	rcall	.+18     	; 0x85e <__divmodhi4_neg2>
 84c:	0e 94 33 04 	call	0x866	; 0x866 <__udivmodhi4>
 850:	07 fc       	sbrc	r0, 7
 852:	05 d0       	rcall	.+10     	; 0x85e <__divmodhi4_neg2>
 854:	3e f4       	brtc	.+14     	; 0x864 <__divmodhi4_exit>

00000856 <__divmodhi4_neg1>:
 856:	90 95       	com	r25
 858:	81 95       	neg	r24
 85a:	9f 4f       	sbci	r25, 0xFF	; 255
 85c:	08 95       	ret

0000085e <__divmodhi4_neg2>:
 85e:	70 95       	com	r23
 860:	61 95       	neg	r22
 862:	7f 4f       	sbci	r23, 0xFF	; 255

00000864 <__divmodhi4_exit>:
 864:	08 95       	ret

00000866 <__udivmodhi4>:
 866:	aa 1b       	sub	r26, r26
 868:	bb 1b       	sub	r27, r27
 86a:	51 e1       	ldi	r21, 0x11	; 17
 86c:	07 c0       	rjmp	.+14     	; 0x87c <__udivmodhi4_ep>

0000086e <__udivmodhi4_loop>:
 86e:	aa 1f       	adc	r26, r26
 870:	bb 1f       	adc	r27, r27
 872:	a6 17       	cp	r26, r22
 874:	b7 07       	cpc	r27, r23
 876:	10 f0       	brcs	.+4      	; 0x87c <__udivmodhi4_ep>
 878:	a6 1b       	sub	r26, r22
 87a:	b7 0b       	sbc	r27, r23

0000087c <__udivmodhi4_ep>:
 87c:	88 1f       	adc	r24, r24
 87e:	99 1f       	adc	r25, r25
 880:	5a 95       	dec	r21
 882:	a9 f7       	brne	.-22     	; 0x86e <__udivmodhi4_loop>
 884:	80 95       	com	r24
 886:	90 95       	com	r25
 888:	bc 01       	movw	r22, r24
 88a:	cd 01       	movw	r24, r26
 88c:	08 95       	ret

0000088e <fdevopen>:
 88e:	0f 93       	push	r16
 890:	1f 93       	push	r17
 892:	cf 93       	push	r28
 894:	df 93       	push	r29
 896:	ec 01       	movw	r28, r24
 898:	8b 01       	movw	r16, r22
 89a:	00 97       	sbiw	r24, 0x00	; 0
 89c:	31 f4       	brne	.+12     	; 0x8aa <fdevopen+0x1c>
 89e:	61 15       	cp	r22, r1
 8a0:	71 05       	cpc	r23, r1
 8a2:	19 f4       	brne	.+6      	; 0x8aa <fdevopen+0x1c>
 8a4:	80 e0       	ldi	r24, 0x00	; 0
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	38 c0       	rjmp	.+112    	; 0x91a <fdevopen+0x8c>
 8aa:	6e e0       	ldi	r22, 0x0E	; 14
 8ac:	70 e0       	ldi	r23, 0x00	; 0
 8ae:	81 e0       	ldi	r24, 0x01	; 1
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	0e 94 92 04 	call	0x924	; 0x924 <calloc>
 8b6:	fc 01       	movw	r30, r24
 8b8:	00 97       	sbiw	r24, 0x00	; 0
 8ba:	a1 f3       	breq	.-24     	; 0x8a4 <fdevopen+0x16>
 8bc:	80 e8       	ldi	r24, 0x80	; 128
 8be:	83 83       	std	Z+3, r24	; 0x03
 8c0:	01 15       	cp	r16, r1
 8c2:	11 05       	cpc	r17, r1
 8c4:	71 f0       	breq	.+28     	; 0x8e2 <fdevopen+0x54>
 8c6:	13 87       	std	Z+11, r17	; 0x0b
 8c8:	02 87       	std	Z+10, r16	; 0x0a
 8ca:	81 e8       	ldi	r24, 0x81	; 129
 8cc:	83 83       	std	Z+3, r24	; 0x03
 8ce:	80 91 fc 01 	lds	r24, 0x01FC
 8d2:	90 91 fd 01 	lds	r25, 0x01FD
 8d6:	89 2b       	or	r24, r25
 8d8:	21 f4       	brne	.+8      	; 0x8e2 <fdevopen+0x54>
 8da:	f0 93 fd 01 	sts	0x01FD, r31
 8de:	e0 93 fc 01 	sts	0x01FC, r30
 8e2:	20 97       	sbiw	r28, 0x00	; 0
 8e4:	c9 f0       	breq	.+50     	; 0x918 <fdevopen+0x8a>
 8e6:	d1 87       	std	Z+9, r29	; 0x09
 8e8:	c0 87       	std	Z+8, r28	; 0x08
 8ea:	83 81       	ldd	r24, Z+3	; 0x03
 8ec:	82 60       	ori	r24, 0x02	; 2
 8ee:	83 83       	std	Z+3, r24	; 0x03
 8f0:	80 91 fe 01 	lds	r24, 0x01FE
 8f4:	90 91 ff 01 	lds	r25, 0x01FF
 8f8:	89 2b       	or	r24, r25
 8fa:	71 f4       	brne	.+28     	; 0x918 <fdevopen+0x8a>
 8fc:	f0 93 ff 01 	sts	0x01FF, r31
 900:	e0 93 fe 01 	sts	0x01FE, r30
 904:	80 91 00 02 	lds	r24, 0x0200
 908:	90 91 01 02 	lds	r25, 0x0201
 90c:	89 2b       	or	r24, r25
 90e:	21 f4       	brne	.+8      	; 0x918 <fdevopen+0x8a>
 910:	f0 93 01 02 	sts	0x0201, r31
 914:	e0 93 00 02 	sts	0x0200, r30
 918:	cf 01       	movw	r24, r30
 91a:	df 91       	pop	r29
 91c:	cf 91       	pop	r28
 91e:	1f 91       	pop	r17
 920:	0f 91       	pop	r16
 922:	08 95       	ret

00000924 <calloc>:
 924:	0f 93       	push	r16
 926:	1f 93       	push	r17
 928:	cf 93       	push	r28
 92a:	df 93       	push	r29
 92c:	86 9f       	mul	r24, r22
 92e:	80 01       	movw	r16, r0
 930:	87 9f       	mul	r24, r23
 932:	10 0d       	add	r17, r0
 934:	96 9f       	mul	r25, r22
 936:	10 0d       	add	r17, r0
 938:	11 24       	eor	r1, r1
 93a:	c8 01       	movw	r24, r16
 93c:	0e 94 ae 04 	call	0x95c	; 0x95c <malloc>
 940:	ec 01       	movw	r28, r24
 942:	00 97       	sbiw	r24, 0x00	; 0
 944:	29 f0       	breq	.+10     	; 0x950 <calloc+0x2c>
 946:	a8 01       	movw	r20, r16
 948:	60 e0       	ldi	r22, 0x00	; 0
 94a:	70 e0       	ldi	r23, 0x00	; 0
 94c:	0e 94 d5 05 	call	0xbaa	; 0xbaa <memset>
 950:	ce 01       	movw	r24, r28
 952:	df 91       	pop	r29
 954:	cf 91       	pop	r28
 956:	1f 91       	pop	r17
 958:	0f 91       	pop	r16
 95a:	08 95       	ret

0000095c <malloc>:
 95c:	cf 93       	push	r28
 95e:	df 93       	push	r29
 960:	82 30       	cpi	r24, 0x02	; 2
 962:	91 05       	cpc	r25, r1
 964:	10 f4       	brcc	.+4      	; 0x96a <malloc+0xe>
 966:	82 e0       	ldi	r24, 0x02	; 2
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	e0 91 04 02 	lds	r30, 0x0204
 96e:	f0 91 05 02 	lds	r31, 0x0205
 972:	20 e0       	ldi	r18, 0x00	; 0
 974:	30 e0       	ldi	r19, 0x00	; 0
 976:	a0 e0       	ldi	r26, 0x00	; 0
 978:	b0 e0       	ldi	r27, 0x00	; 0
 97a:	30 97       	sbiw	r30, 0x00	; 0
 97c:	39 f1       	breq	.+78     	; 0x9cc <malloc+0x70>
 97e:	40 81       	ld	r20, Z
 980:	51 81       	ldd	r21, Z+1	; 0x01
 982:	48 17       	cp	r20, r24
 984:	59 07       	cpc	r21, r25
 986:	b8 f0       	brcs	.+46     	; 0x9b6 <malloc+0x5a>
 988:	48 17       	cp	r20, r24
 98a:	59 07       	cpc	r21, r25
 98c:	71 f4       	brne	.+28     	; 0x9aa <malloc+0x4e>
 98e:	82 81       	ldd	r24, Z+2	; 0x02
 990:	93 81       	ldd	r25, Z+3	; 0x03
 992:	10 97       	sbiw	r26, 0x00	; 0
 994:	29 f0       	breq	.+10     	; 0x9a0 <malloc+0x44>
 996:	13 96       	adiw	r26, 0x03	; 3
 998:	9c 93       	st	X, r25
 99a:	8e 93       	st	-X, r24
 99c:	12 97       	sbiw	r26, 0x02	; 2
 99e:	2c c0       	rjmp	.+88     	; 0x9f8 <malloc+0x9c>
 9a0:	90 93 05 02 	sts	0x0205, r25
 9a4:	80 93 04 02 	sts	0x0204, r24
 9a8:	27 c0       	rjmp	.+78     	; 0x9f8 <malloc+0x9c>
 9aa:	21 15       	cp	r18, r1
 9ac:	31 05       	cpc	r19, r1
 9ae:	31 f0       	breq	.+12     	; 0x9bc <malloc+0x60>
 9b0:	42 17       	cp	r20, r18
 9b2:	53 07       	cpc	r21, r19
 9b4:	18 f0       	brcs	.+6      	; 0x9bc <malloc+0x60>
 9b6:	a9 01       	movw	r20, r18
 9b8:	db 01       	movw	r26, r22
 9ba:	01 c0       	rjmp	.+2      	; 0x9be <malloc+0x62>
 9bc:	ef 01       	movw	r28, r30
 9be:	9a 01       	movw	r18, r20
 9c0:	bd 01       	movw	r22, r26
 9c2:	df 01       	movw	r26, r30
 9c4:	02 80       	ldd	r0, Z+2	; 0x02
 9c6:	f3 81       	ldd	r31, Z+3	; 0x03
 9c8:	e0 2d       	mov	r30, r0
 9ca:	d7 cf       	rjmp	.-82     	; 0x97a <malloc+0x1e>
 9cc:	21 15       	cp	r18, r1
 9ce:	31 05       	cpc	r19, r1
 9d0:	f9 f0       	breq	.+62     	; 0xa10 <malloc+0xb4>
 9d2:	28 1b       	sub	r18, r24
 9d4:	39 0b       	sbc	r19, r25
 9d6:	24 30       	cpi	r18, 0x04	; 4
 9d8:	31 05       	cpc	r19, r1
 9da:	80 f4       	brcc	.+32     	; 0x9fc <malloc+0xa0>
 9dc:	8a 81       	ldd	r24, Y+2	; 0x02
 9de:	9b 81       	ldd	r25, Y+3	; 0x03
 9e0:	61 15       	cp	r22, r1
 9e2:	71 05       	cpc	r23, r1
 9e4:	21 f0       	breq	.+8      	; 0x9ee <malloc+0x92>
 9e6:	fb 01       	movw	r30, r22
 9e8:	93 83       	std	Z+3, r25	; 0x03
 9ea:	82 83       	std	Z+2, r24	; 0x02
 9ec:	04 c0       	rjmp	.+8      	; 0x9f6 <malloc+0x9a>
 9ee:	90 93 05 02 	sts	0x0205, r25
 9f2:	80 93 04 02 	sts	0x0204, r24
 9f6:	fe 01       	movw	r30, r28
 9f8:	32 96       	adiw	r30, 0x02	; 2
 9fa:	44 c0       	rjmp	.+136    	; 0xa84 <malloc+0x128>
 9fc:	fe 01       	movw	r30, r28
 9fe:	e2 0f       	add	r30, r18
 a00:	f3 1f       	adc	r31, r19
 a02:	81 93       	st	Z+, r24
 a04:	91 93       	st	Z+, r25
 a06:	22 50       	subi	r18, 0x02	; 2
 a08:	31 09       	sbc	r19, r1
 a0a:	39 83       	std	Y+1, r19	; 0x01
 a0c:	28 83       	st	Y, r18
 a0e:	3a c0       	rjmp	.+116    	; 0xa84 <malloc+0x128>
 a10:	20 91 02 02 	lds	r18, 0x0202
 a14:	30 91 03 02 	lds	r19, 0x0203
 a18:	23 2b       	or	r18, r19
 a1a:	41 f4       	brne	.+16     	; 0xa2c <malloc+0xd0>
 a1c:	20 91 02 01 	lds	r18, 0x0102
 a20:	30 91 03 01 	lds	r19, 0x0103
 a24:	30 93 03 02 	sts	0x0203, r19
 a28:	20 93 02 02 	sts	0x0202, r18
 a2c:	20 91 00 01 	lds	r18, 0x0100
 a30:	30 91 01 01 	lds	r19, 0x0101
 a34:	21 15       	cp	r18, r1
 a36:	31 05       	cpc	r19, r1
 a38:	41 f4       	brne	.+16     	; 0xa4a <malloc+0xee>
 a3a:	2d b7       	in	r18, 0x3d	; 61
 a3c:	3e b7       	in	r19, 0x3e	; 62
 a3e:	40 91 04 01 	lds	r20, 0x0104
 a42:	50 91 05 01 	lds	r21, 0x0105
 a46:	24 1b       	sub	r18, r20
 a48:	35 0b       	sbc	r19, r21
 a4a:	e0 91 02 02 	lds	r30, 0x0202
 a4e:	f0 91 03 02 	lds	r31, 0x0203
 a52:	e2 17       	cp	r30, r18
 a54:	f3 07       	cpc	r31, r19
 a56:	a0 f4       	brcc	.+40     	; 0xa80 <malloc+0x124>
 a58:	2e 1b       	sub	r18, r30
 a5a:	3f 0b       	sbc	r19, r31
 a5c:	28 17       	cp	r18, r24
 a5e:	39 07       	cpc	r19, r25
 a60:	78 f0       	brcs	.+30     	; 0xa80 <malloc+0x124>
 a62:	ac 01       	movw	r20, r24
 a64:	4e 5f       	subi	r20, 0xFE	; 254
 a66:	5f 4f       	sbci	r21, 0xFF	; 255
 a68:	24 17       	cp	r18, r20
 a6a:	35 07       	cpc	r19, r21
 a6c:	48 f0       	brcs	.+18     	; 0xa80 <malloc+0x124>
 a6e:	4e 0f       	add	r20, r30
 a70:	5f 1f       	adc	r21, r31
 a72:	50 93 03 02 	sts	0x0203, r21
 a76:	40 93 02 02 	sts	0x0202, r20
 a7a:	81 93       	st	Z+, r24
 a7c:	91 93       	st	Z+, r25
 a7e:	02 c0       	rjmp	.+4      	; 0xa84 <malloc+0x128>
 a80:	e0 e0       	ldi	r30, 0x00	; 0
 a82:	f0 e0       	ldi	r31, 0x00	; 0
 a84:	cf 01       	movw	r24, r30
 a86:	df 91       	pop	r29
 a88:	cf 91       	pop	r28
 a8a:	08 95       	ret

00000a8c <free>:
 a8c:	cf 93       	push	r28
 a8e:	df 93       	push	r29
 a90:	00 97       	sbiw	r24, 0x00	; 0
 a92:	09 f4       	brne	.+2      	; 0xa96 <free+0xa>
 a94:	87 c0       	rjmp	.+270    	; 0xba4 <free+0x118>
 a96:	fc 01       	movw	r30, r24
 a98:	32 97       	sbiw	r30, 0x02	; 2
 a9a:	13 82       	std	Z+3, r1	; 0x03
 a9c:	12 82       	std	Z+2, r1	; 0x02
 a9e:	c0 91 04 02 	lds	r28, 0x0204
 aa2:	d0 91 05 02 	lds	r29, 0x0205
 aa6:	20 97       	sbiw	r28, 0x00	; 0
 aa8:	81 f4       	brne	.+32     	; 0xaca <free+0x3e>
 aaa:	20 81       	ld	r18, Z
 aac:	31 81       	ldd	r19, Z+1	; 0x01
 aae:	28 0f       	add	r18, r24
 ab0:	39 1f       	adc	r19, r25
 ab2:	80 91 02 02 	lds	r24, 0x0202
 ab6:	90 91 03 02 	lds	r25, 0x0203
 aba:	82 17       	cp	r24, r18
 abc:	93 07       	cpc	r25, r19
 abe:	79 f5       	brne	.+94     	; 0xb1e <free+0x92>
 ac0:	f0 93 03 02 	sts	0x0203, r31
 ac4:	e0 93 02 02 	sts	0x0202, r30
 ac8:	6d c0       	rjmp	.+218    	; 0xba4 <free+0x118>
 aca:	de 01       	movw	r26, r28
 acc:	20 e0       	ldi	r18, 0x00	; 0
 ace:	30 e0       	ldi	r19, 0x00	; 0
 ad0:	ae 17       	cp	r26, r30
 ad2:	bf 07       	cpc	r27, r31
 ad4:	50 f4       	brcc	.+20     	; 0xaea <free+0x5e>
 ad6:	12 96       	adiw	r26, 0x02	; 2
 ad8:	4d 91       	ld	r20, X+
 ada:	5c 91       	ld	r21, X
 adc:	13 97       	sbiw	r26, 0x03	; 3
 ade:	9d 01       	movw	r18, r26
 ae0:	41 15       	cp	r20, r1
 ae2:	51 05       	cpc	r21, r1
 ae4:	09 f1       	breq	.+66     	; 0xb28 <free+0x9c>
 ae6:	da 01       	movw	r26, r20
 ae8:	f3 cf       	rjmp	.-26     	; 0xad0 <free+0x44>
 aea:	b3 83       	std	Z+3, r27	; 0x03
 aec:	a2 83       	std	Z+2, r26	; 0x02
 aee:	40 81       	ld	r20, Z
 af0:	51 81       	ldd	r21, Z+1	; 0x01
 af2:	84 0f       	add	r24, r20
 af4:	95 1f       	adc	r25, r21
 af6:	8a 17       	cp	r24, r26
 af8:	9b 07       	cpc	r25, r27
 afa:	71 f4       	brne	.+28     	; 0xb18 <free+0x8c>
 afc:	8d 91       	ld	r24, X+
 afe:	9c 91       	ld	r25, X
 b00:	11 97       	sbiw	r26, 0x01	; 1
 b02:	84 0f       	add	r24, r20
 b04:	95 1f       	adc	r25, r21
 b06:	02 96       	adiw	r24, 0x02	; 2
 b08:	91 83       	std	Z+1, r25	; 0x01
 b0a:	80 83       	st	Z, r24
 b0c:	12 96       	adiw	r26, 0x02	; 2
 b0e:	8d 91       	ld	r24, X+
 b10:	9c 91       	ld	r25, X
 b12:	13 97       	sbiw	r26, 0x03	; 3
 b14:	93 83       	std	Z+3, r25	; 0x03
 b16:	82 83       	std	Z+2, r24	; 0x02
 b18:	21 15       	cp	r18, r1
 b1a:	31 05       	cpc	r19, r1
 b1c:	29 f4       	brne	.+10     	; 0xb28 <free+0x9c>
 b1e:	f0 93 05 02 	sts	0x0205, r31
 b22:	e0 93 04 02 	sts	0x0204, r30
 b26:	3e c0       	rjmp	.+124    	; 0xba4 <free+0x118>
 b28:	d9 01       	movw	r26, r18
 b2a:	13 96       	adiw	r26, 0x03	; 3
 b2c:	fc 93       	st	X, r31
 b2e:	ee 93       	st	-X, r30
 b30:	12 97       	sbiw	r26, 0x02	; 2
 b32:	4d 91       	ld	r20, X+
 b34:	5d 91       	ld	r21, X+
 b36:	a4 0f       	add	r26, r20
 b38:	b5 1f       	adc	r27, r21
 b3a:	ea 17       	cp	r30, r26
 b3c:	fb 07       	cpc	r31, r27
 b3e:	79 f4       	brne	.+30     	; 0xb5e <free+0xd2>
 b40:	80 81       	ld	r24, Z
 b42:	91 81       	ldd	r25, Z+1	; 0x01
 b44:	84 0f       	add	r24, r20
 b46:	95 1f       	adc	r25, r21
 b48:	02 96       	adiw	r24, 0x02	; 2
 b4a:	d9 01       	movw	r26, r18
 b4c:	11 96       	adiw	r26, 0x01	; 1
 b4e:	9c 93       	st	X, r25
 b50:	8e 93       	st	-X, r24
 b52:	82 81       	ldd	r24, Z+2	; 0x02
 b54:	93 81       	ldd	r25, Z+3	; 0x03
 b56:	13 96       	adiw	r26, 0x03	; 3
 b58:	9c 93       	st	X, r25
 b5a:	8e 93       	st	-X, r24
 b5c:	12 97       	sbiw	r26, 0x02	; 2
 b5e:	e0 e0       	ldi	r30, 0x00	; 0
 b60:	f0 e0       	ldi	r31, 0x00	; 0
 b62:	8a 81       	ldd	r24, Y+2	; 0x02
 b64:	9b 81       	ldd	r25, Y+3	; 0x03
 b66:	00 97       	sbiw	r24, 0x00	; 0
 b68:	19 f0       	breq	.+6      	; 0xb70 <free+0xe4>
 b6a:	fe 01       	movw	r30, r28
 b6c:	ec 01       	movw	r28, r24
 b6e:	f9 cf       	rjmp	.-14     	; 0xb62 <free+0xd6>
 b70:	ce 01       	movw	r24, r28
 b72:	02 96       	adiw	r24, 0x02	; 2
 b74:	28 81       	ld	r18, Y
 b76:	39 81       	ldd	r19, Y+1	; 0x01
 b78:	82 0f       	add	r24, r18
 b7a:	93 1f       	adc	r25, r19
 b7c:	20 91 02 02 	lds	r18, 0x0202
 b80:	30 91 03 02 	lds	r19, 0x0203
 b84:	28 17       	cp	r18, r24
 b86:	39 07       	cpc	r19, r25
 b88:	69 f4       	brne	.+26     	; 0xba4 <free+0x118>
 b8a:	30 97       	sbiw	r30, 0x00	; 0
 b8c:	29 f4       	brne	.+10     	; 0xb98 <free+0x10c>
 b8e:	10 92 05 02 	sts	0x0205, r1
 b92:	10 92 04 02 	sts	0x0204, r1
 b96:	02 c0       	rjmp	.+4      	; 0xb9c <free+0x110>
 b98:	13 82       	std	Z+3, r1	; 0x03
 b9a:	12 82       	std	Z+2, r1	; 0x02
 b9c:	d0 93 03 02 	sts	0x0203, r29
 ba0:	c0 93 02 02 	sts	0x0202, r28
 ba4:	df 91       	pop	r29
 ba6:	cf 91       	pop	r28
 ba8:	08 95       	ret

00000baa <memset>:
 baa:	dc 01       	movw	r26, r24
 bac:	01 c0       	rjmp	.+2      	; 0xbb0 <memset+0x6>
 bae:	6d 93       	st	X+, r22
 bb0:	41 50       	subi	r20, 0x01	; 1
 bb2:	50 40       	sbci	r21, 0x00	; 0
 bb4:	e0 f7       	brcc	.-8      	; 0xbae <memset+0x4>
 bb6:	08 95       	ret

00000bb8 <_exit>:
 bb8:	f8 94       	cli

00000bba <__stop_program>:
 bba:	ff cf       	rjmp	.-2      	; 0xbba <__stop_program>
